[{"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/index.js":"1","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/App.js":"2","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/reportWebVitals.js":"3","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/register.js":"4"},{"size":719,"mtime":1607674963002,"results":"5","hashOfConfig":"6"},{"size":4712,"mtime":1607674804892,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607660636696,"results":"8","hashOfConfig":"6"},{"size":4757,"mtime":1607673646447,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"14zkz2u",{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/index.js",["23"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Route exact path=\"/\">\n        <App />\n      </Route>\n      <Route exact path=\"/register\">\n        <Register />\n      </Route>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["24","25"],"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/App.js",["26","27","28"],"import axios from \"axios\";\nimport \"./App.css\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nconst apiKey = \"1pigYzAdHBepN1i5E1ga2Jdug12i4Mu3Ph8PYp15\";\n\nconst apiUrl = \"https://u8fpqfk2d4.execute-api.ap-southeast-1.amazonaws.com/\";\n\nconst jwtToken = \"mockToken\";\n\nconst authAxios = axios.create({\n  \n  baseURL: apiUrl,\n  headers: {\n    \"x-api-key\": `${apiKey}`,\n    Authorization: `Bearer ${jwtToken}`,\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction App() {\n  const [customerInfo, setCustomerInfo] = useState({\n    custID: \"mockID\",\n    firstName: \"mockFirstName\",\n    lastName: \"mockLastName\",\n    nric: \"mockNric\",\n    gender: \"mockGender\",\n    age: \"mockAge\",\n    phoneNumber: \"mockPhoneNumber\",\n    email: \"mockEmail\",\n    address: \"mockAddress\",\n  });\n  const [errorInfo, setErrorInfo] = useState();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const classes = useStyles();\n\n  const login = useCallback(async () => {\n    try {\n      //call the api\n\n      const result = await authAxios.post(`/techtrek2020/login`, {\n        username: { username },\n        password: { password },\n      });\n\n      setCustomerInfo(result.data);\n    } catch (error) {\n      //catch any errors\n      setErrorInfo(error.message);\n    }\n  }, []);\n\n  const submitHandler = () => {\n    login();\n  };\n\n  return (\n    <div className=\"App\">\n      <button onClick={() => login()}> Login </button>\n\n      <div>\n        {Object.entries(customerInfo).map((info) => {\n          return <ul key={info[1]}>{`${info[0]} : ${info[1]}`}</ul>;\n        })}\n      </div>\n      <p>{errorInfo}</p>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}></Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(e) => {\n              e.preventDefault();\n              submitHandler();\n            }}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}>\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"./Register\" variant=\"body2\">\n                  {\"Register\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/reportWebVitals.js",[],"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/register.js",["29","30","31","32","33","34","35","36","37","38"],"import axios from \"axios\";\nimport \"./App.css\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst apiKey = \"1pigYzAdHBepN1i5E1ga2Jdug12i4Mu3Ph8PYp15\";\n\nconst apiUrl = \"https://u8fpqfk2d4.execute-api.ap-southeast-1.amazonaws.com/\";\n\nconst jwtToken = \"mockToken\";\n\nconst authAxios = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    \"x-api-key\": `${apiKey}`,\n    Authorization: `Bearer ${jwtToken}`,\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction App() {\n  const [customerInfo, setCustomerInfo] = useState({\n    custID: \"mockID\",\n    firstName: \"mockFirstName\",\n    lastName: \"mockLastName\",\n    nric: \"mockNric\",\n    gender: \"mockGender\",\n    age: \"mockAge\",\n    phoneNumber: \"mockPhoneNumber\",\n    email: \"mockEmail\",\n    address: \"mockAddress\",\n  });\n  const [errorInfo, setErrorInfo] = useState();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n\n  const classes = useStyles();\n\n  const login = useCallback(async () => {\n    try {\n      //call the api\n\n      const result = await authAxios.post(`/techtrek2020/login`, {\n        username: { username },\n        password: { password },\n        email: { email },\n      });\n\n      setCustomerInfo(result.data);\n    } catch (error) {\n      //catch any errors\n      setErrorInfo(error.message);\n    }\n  }, []);\n\n  const submitHandler = () => {\n    login();\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={() => login()}> Login </button>\n\n      <div>\n        {Object.entries(customerInfo).map((info) => {\n          return <ul key={info[1]}>{`${info[0]} : ${info[1]}`}</ul>;\n        })}\n      </div>\n      <p>{errorInfo}</p> */}\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registration\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(e) => {\n              e.preventDefault();\n              submitHandler();\n            }}>\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"EmailAddress\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"username\"\n              label=\"Username\"\n              type=\"username\"\n              id=\"username\"\n              autoComplete=\"current-username\"\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"red\"\n              className={classes.submit}>\n              Sign Up\n            </Button>\n            <Grid container>\n\n\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n",["39","40"],{"ruleId":"41","severity":2,"message":"42","line":15,"column":10,"nodeType":"43","endLine":15,"endColumn":18},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":40,"nodeType":"50","messageId":"51","endLine":3,"endColumn":49},{"ruleId":"48","severity":1,"message":"52","line":12,"column":8,"nodeType":"50","messageId":"51","endLine":12,"endColumn":11},{"ruleId":"53","severity":1,"message":"54","line":87,"column":6,"nodeType":"55","endLine":87,"endColumn":8,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"49","line":3,"column":40,"nodeType":"50","messageId":"51","endLine":3,"endColumn":49},{"ruleId":"48","severity":1,"message":"57","line":4,"column":8,"nodeType":"50","messageId":"51","endLine":4,"endColumn":14},{"ruleId":"48","severity":1,"message":"58","line":8,"column":8,"nodeType":"50","messageId":"51","endLine":8,"endColumn":24},{"ruleId":"48","severity":1,"message":"59","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":16},{"ruleId":"48","severity":1,"message":"60","line":10,"column":8,"nodeType":"50","messageId":"51","endLine":10,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":12,"column":8,"nodeType":"50","messageId":"51","endLine":12,"endColumn":11},{"ruleId":"48","severity":1,"message":"61","line":19,"column":20,"nodeType":"50","messageId":"51","endLine":19,"endColumn":26},{"ruleId":"48","severity":1,"message":"62","line":20,"column":3,"nodeType":"50","messageId":"51","endLine":20,"endColumn":9},{"ruleId":"48","severity":1,"message":"63","line":21,"column":3,"nodeType":"50","messageId":"51","endLine":21,"endColumn":8},{"ruleId":"53","severity":1,"message":"64","line":94,"column":6,"nodeType":"55","endLine":94,"endColumn":8,"suggestions":"65"},{"ruleId":"44","replacedBy":"66"},{"ruleId":"46","replacedBy":"67"},"react/jsx-no-undef","'Register' is not defined.","JSXIdentifier","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'password' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["70"],"'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","React Hook useCallback has missing dependencies: 'email', 'password', and 'username'. Either include them or remove the dependency array.",["71"],["68"],["69"],"no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},{"desc":"74","fix":"75"},"Update the dependencies array to be: [password, username]",{"range":"76","text":"77"},"Update the dependencies array to be: [email, password, username]",{"range":"78","text":"79"},[2298,2300],"[password, username]",[2445,2447],"[email, password, username]"]