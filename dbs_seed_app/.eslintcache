[{"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/index.js":"1","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/App.js":"2","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/reportWebVitals.js":"3","/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/register.js":"4"},{"size":500,"mtime":1607673391838,"results":"5","hashOfConfig":"6"},{"size":5089,"mtime":1607674290939,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1607660636696,"results":"8","hashOfConfig":"6"},{"size":4757,"mtime":1607673646447,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14zkz2u",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/index.js",[],"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/App.js",["20","21","22","23"],"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/reportWebVitals.js",[],["24","25"],"/Users/jameselijah/Documents/GitHub/SEED2021_TT2_19/dbs_seed_app/src/register.js",["26","27","28","29","30","31","32","33","34","35"],"import axios from \"axios\";\nimport \"./App.css\";\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nconst apiKey = \"1pigYzAdHBepN1i5E1ga2Jdug12i4Mu3Ph8PYp15\";\n\nconst apiUrl = \"https://u8fpqfk2d4.execute-api.ap-southeast-1.amazonaws.com/\";\n\nconst jwtToken = \"mockToken\";\n\nconst authAxios = axios.create({\n  baseURL: apiUrl,\n  headers: {\n    \"x-api-key\": `${apiKey}`,\n    Authorization: `Bearer ${jwtToken}`,\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction App() {\n  const [customerInfo, setCustomerInfo] = useState({\n    custID: \"mockID\",\n    firstName: \"mockFirstName\",\n    lastName: \"mockLastName\",\n    nric: \"mockNric\",\n    gender: \"mockGender\",\n    age: \"mockAge\",\n    phoneNumber: \"mockPhoneNumber\",\n    email: \"mockEmail\",\n    address: \"mockAddress\",\n  });\n  const [errorInfo, setErrorInfo] = useState();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n\n  const classes = useStyles();\n\n  const login = useCallback(async () => {\n    try {\n      //call the api\n\n      const result = await authAxios.post(`/techtrek2020/login`, {\n        username: { username },\n        password: { password },\n        email: { email },\n      });\n\n      setCustomerInfo(result.data);\n    } catch (error) {\n      //catch any errors\n      setErrorInfo(error.message);\n    }\n  }, []);\n\n  const submitHandler = () => {\n    login();\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={() => login()}> Login </button>\n\n      <div>\n        {Object.entries(customerInfo).map((info) => {\n          return <ul key={info[1]}>{`${info[0]} : ${info[1]}`}</ul>;\n        })}\n      </div>\n      <p>{errorInfo}</p> */}\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h5\">\n            Registration\n          </Typography>\n          <form\n            className={classes.form}\n            noValidate\n            onSubmit={(e) => {\n              e.preventDefault();\n              submitHandler();\n            }}>\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"EmailAddress\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"username\"\n              label=\"Username\"\n              type=\"username\"\n              id=\"username\"\n              autoComplete=\"current-username\"\n              onChange={(e) => {\n                setUsername(e.target.value);\n              }}\n            />\n\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"red\"\n              className={classes.submit}>\n              Sign Up\n            </Button>\n            <Grid container>\n\n\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"36","severity":1,"message":"37","line":3,"column":40,"nodeType":"38","messageId":"39","endLine":3,"endColumn":49},{"ruleId":"36","severity":1,"message":"40","line":66,"column":10,"nodeType":"38","messageId":"39","endLine":66,"endColumn":22},{"ruleId":"36","severity":1,"message":"41","line":77,"column":10,"nodeType":"38","messageId":"39","endLine":77,"endColumn":19},{"ruleId":"42","severity":1,"message":"43","line":98,"column":6,"nodeType":"44","endLine":98,"endColumn":8,"suggestions":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":40,"nodeType":"38","messageId":"39","endLine":3,"endColumn":49},{"ruleId":"36","severity":1,"message":"50","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":14},{"ruleId":"36","severity":1,"message":"51","line":8,"column":8,"nodeType":"38","messageId":"39","endLine":8,"endColumn":24},{"ruleId":"36","severity":1,"message":"52","line":9,"column":8,"nodeType":"38","messageId":"39","endLine":9,"endColumn":16},{"ruleId":"36","severity":1,"message":"53","line":10,"column":8,"nodeType":"38","messageId":"39","endLine":10,"endColumn":12},{"ruleId":"36","severity":1,"message":"54","line":12,"column":8,"nodeType":"38","messageId":"39","endLine":12,"endColumn":11},{"ruleId":"36","severity":1,"message":"55","line":19,"column":20,"nodeType":"38","messageId":"39","endLine":19,"endColumn":26},{"ruleId":"36","severity":1,"message":"56","line":20,"column":3,"nodeType":"38","messageId":"39","endLine":20,"endColumn":9},{"ruleId":"36","severity":1,"message":"57","line":21,"column":3,"nodeType":"38","messageId":"39","endLine":21,"endColumn":8},{"ruleId":"42","severity":1,"message":"58","line":94,"column":6,"nodeType":"44","endLine":94,"endColumn":8,"suggestions":"59"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'customerInfo' is assigned a value but never used.","'errorInfo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has missing dependencies: 'password' and 'username'. Either include them or remove the dependency array.","ArrayExpression",["60"],"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"'Avatar' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Link' is defined but never used.","'Box' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","React Hook useCallback has missing dependencies: 'email', 'password', and 'username'. Either include them or remove the dependency array.",["63"],{"desc":"64","fix":"65"},"no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [password, username]",{"range":"68","text":"69"},"Update the dependencies array to be: [email, password, username]",{"range":"70","text":"71"},[2593,2595],"[password, username]",[2445,2447],"[email, password, username]"]